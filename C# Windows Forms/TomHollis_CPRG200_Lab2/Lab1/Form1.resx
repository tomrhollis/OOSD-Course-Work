<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>