/**
 *  Travel Experts Web Backoffice
 *  Web app for agents to maintain the business database
 *  AJAX.JS: Javascript functions for dynamic updates
 *
 *  Primary author: Tom Hollis
 *  April/May 2020
 */


// get all rows for the selected table
function getTable() {

	// get the selected table from the dropdown
	let table = $('#allTables option').eq($('#allTables').prop('selectedIndex')).val();
	
	// make sure we don't have a weird invalid situation
	if (table == "" || table == null) {
		clearTable();
		return;
	}
	
	// make the AJAX call and go to get the metadata
	$.ajax({
		url: "rs/TERest/"+table,
		type: "GET",
		datatype: "json",
		success: function(data){ getMeta(data); }
	});
	
}


// get a record from the database
function getRecord(id) {

	// get the selected table from the dropdown
	let table = $('#allTables option').eq($('#allTables').prop('selectedIndex')).val();
	
	// make sure we don't have a weird invalid situation
	if (id <= 0 || table == "" || table == null) { // not sure how this would happen, but just in case
		return;
	}
	
	// make the AJAX call and go to loadRecord()
	$.ajax({
		url: "rs/TERest/"+table+"/"+id,
		type: "GET",
		datatype: "json",
		success: function(data){ loadRecord(data); }
	});

}

//put record details into the structure of the details form generated by drawTable()
function loadRecord(data){
	
	// for each key in the data
	Object.keys(data).forEach(field => {
		// find the element with that string as its id and put the value in it
		$('#'+field).val(data[field]);
	});
	
	// change the buttons to update instead of create new
	$('#btnSend').text('Update').attr('onclick', 'sendRecord("POST")'); 
	$('#btnClear').text('Make New');   // instead of clear, this is now for switching to "make new" functionality
	$('#btnDel').css('visibility', 'visible') // enable the delete button
}

// send a JSON object to the REST service for update or insert
function sendRecord(op){

	// get the selected table from the dropdown
	let table = $('#allTables option').eq($('#allTables').prop('selectedIndex')).val();
	
	
	let id=0;
	if(op == "POST"){
		// if this is an update, get the current record from the first field so we can reload it later
		id = $('#detailsForm input').eq(0).val();
	} else {
		// if this is a new record, fill in the id with 0 so it can be auto-assigned without GSON pitching a fit about missing fields
		$('#detailsForm input').eq(0).val('0');
	}
	
	// set up the string 
	let json = "{";
	
	// add each field to the json string
	for (var i=0; i < $('#detailsForm input').length; i++){
		if (i != 0) { // start with a comma if this isn't the first one
			json += ", ";
		}
		// add the data from the form
		json += '"'+$('#detailsForm input').eq(i).attr('id') + '": "' + $('#detailsForm input').eq(i).val()+'"';
	}
	
	// close off the json
	json += "}";
	
	// make the AJAX call, either PUT or POST depending on the value of the op parameter
	$.ajax({
		url: "rs/TERest/"+table,
		type: op,
		data: json,
		datatype: "json",
		contentType:"application/json; charset=UTF-8",
		success: function(data){ getTable(); if(op == "POST"){ getRecord(id); }}
	});
	

}

// delete a record from the database
function delRecord(){
	
	// get the selected table from the dropdown
	let table = $('#allTables option').eq($('#allTables').prop('selectedIndex')).val();
	let id = $('#detailsForm input').eq(0).val();
	
	// make the AJAX call, if successful do getTable() again to refresh the table data and redraw everything
	$.ajax({
		url: "rs/TERest/"+table+"/"+id,
		type: "DELETE",
		success: function(){ getTable(); }
	});
	
}


// get metadata for the current data type to help with creating the table and fields
function getMeta(fields){
	// get the selected table from the dropdown
	let table = $('#allTables option').eq($('#allTables').prop('selectedIndex')).val();
		
	// make the AJAX call and send to drawTable()
	$.ajax({
		url: "rs/TERest/"+table+"/meta",
		type: "GET",
		datatype: "json",
		success: function(data){ drawTable(fields, JSON.parse(data)); }
	});
}


// to get metadata on the selected table, draw & load the table and draw the empty detail display
function drawTable(data, meta){
	// clear the page
	clearTable();

	// create the first row of the table
	var firstRow = "<tr id='firstRow'></tr>";
	$('#listTable').append(firstRow);
	
	// make sure the objects are sorted by order, in case it wasn't sent that way
	meta.sort(function(a,b){return a.order - b.order;});
		
	// go through the metadata for each field in order
	meta.forEach(field => {
		// make inputs for it in the details form
		newfield = "<div class='row' id='D"+field.dbname+"'><label for='"+field.dbname+"' class='col-3'>"+field.nickname+"</label><input class='col-6' id='"+field.dbname+"' name='"+field.dbname+"' type='text' /></div>";
		$('#detailsForm').append(newfield);
		// and a new column in the table
		newcol = $("<th></th>").text(field.nickname);
		$('#firstRow').append(newcol);
	
	});
	
	// now that all the fields are in place, make the table row for each record
	data.forEach(record =>{
		// make sure the row for the data has an onclick that calls getRecord(id#)
		var newrow = "<tr onclick='getRecord("+record[meta[0].dbname]+")'>";
		// for each key we know about, get that data from each record to build a table row
		meta.forEach(field => {
			text = record[field.dbname];
			// handle nulls
			if (text == "undefined" || text == null){
				text = "";
			}
			// add the text to the HTML
			newrow += "<td>" + text + "</td>";
		});
		newrow += "</tr>"; // close off the row
		
		// add the record to the table
		$('#listTable').append(newrow);
	});	
	
	// make the buttons to go below the form
	$('#detailsForm').append($('<button id="btnSend" onclick=sendRecord("PUT")>Add</button>'));
	$('#detailsForm').append($('<button id="btnClear" onclick=clearRecord()>Clear</button>'));
	$('#detailsForm').append($('<button id="btnDel" onclick=delRecord()>Delete</button>').css('visibility', 'hidden'));
	
}


//to remove all data from the record display
function clearRecord(){
	// set all text fields to blank
	$('#detailsForm input').val('');
	
	// also set the submit button to be a PUT instead of POST
	$('#btnSend').text('Add').attr('onclick', 'sendRecord("PUT")');
	$('#btnClear').text('Clear');
	$('#btnDel').css('visibility', 'hidden');

}


//to remove all data from the table display
function clearTable(){
	
	$('#listTable').html('');
	$('#detailsForm').html('');
}

